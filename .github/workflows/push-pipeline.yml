name: CI/CD grades-microservice

env:
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  SERVER_PORT: ${{ secrets.SERVER_PORT }}
  NODE_ENV: ${{ secrets.NODE_ENV }}

  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
  TOKEN_EXPIRES_IN: ${{ secrets.TOKEN_EXPIRES_IN }}

  JDOODLE_CLIENT_ID: ${{ secrets.JDOODLE_CLIENT_ID }}
  JDOODLE_CLIENT_SECRET: ${{ secrets.JDOODLE_CLIENT_SECRET }}
  JDOODLE_URL: ${{ secrets.JDOODLE_URL }}

  EMAIL_USER: ${{ secrets.EMAIL_USER }}
  EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
  EMAIL_SERVICE: ${{ secrets.EMAIL_SERVICE }}
  EMAIL_PROVIDER: ${{ secrets.EMAIL_PROVIDER }}

  CLIENT_URL: ${{ secrets.CLIENT_URL }}
  SERVER_URL: ${{ secrets.SERVER_URL }}
  
on:
  push:
    branches:
      - master
      - qa
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies and build
        run: |
            npm install
            npm run build

  deploy-preview:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/qa'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Project Artifacts to Vercel with Author Info
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy Project Artifacts to Vercel with Author Info
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}